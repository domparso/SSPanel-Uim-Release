server {
    listen 80;
    listen [::]:80;
    server_name example.com;
    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl ;
    listen [::]:443 ssl;
    ssl_certificate       /etc/nginx/ssl/fullchain.cer;
    ssl_certificate_key   /etc/nginx/ssl/example.com.key;
    ssl_protocols         TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers           TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server_name example.com;
    root /usr/share/nginx/html/sspanel/public;
    index index.php index.html index.htm default.php default.htm default.html;
    error_page 400 = /400.html;

    # Config for 0-RTT in TLSv1.3
    ssl_early_data on;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/ca.cer;
    add_header Strict-Transport-Security "max-age=31536000";

    location / {
        #伪静态
        try_files $uri $uri/ /index.php$is_args$query_string;
        index  index.php index.html index.htm;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000  
    #
    location ~ \.php$ {  
        # root /usr/share/nginx/html/sspanel/public;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass sspanel:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /app/public$fastcgi_script_name;
        # include fastcgi.conf;
        include fastcgi_params;
        # include pathinfo.conf;
        # return 200 "xforwardedfor:$proxy_add_x_forwarded_for--SCRIPT_FILENAME:$document_root$fastcgi_script_name";
    }

    # Forbidden files or directories
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)
    {
        return 404;
    }

    # Directory verification related settings for one-click application for SSL certificate
    location ~ \.well-known{
        allow all;
    }

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    {
        expires      30d;
        error_log /dev/null;
        access_log off;
    }

    location ~ .*\.(js|css)?$
    {
        expires      12h;
        error_log /dev/null;
        access_log off; 
    }

    location ~ /\.ht {
        deny  all;
    }
}